import math
import struct
import numpy as np
import csv,pprint
import random
import matplotlib.pyplot as plt
from matplotlib import cbook
from matplotlib import cm
from matplotlib.colors import LightSource


import torch
import torch.nn as nn
import torch.optim as optim
import torch.utils.data
import torch.nn.functional as F

import torchsummary


from torchvision.datasets import mnist
from torchvision import datasets,transforms

def float_to_hex(f):
    return hex(struct.unpack('<I', struct.pack('<f', f))[0])[2:]
def hex_to_float(h):
    return struct.unpack('<f', struct.pack('<I', h))[0]




class Net(nn.Module):
    def __init__(self):
        super(Net, self).__init__()
        self.conv1 = nn.Conv2d(1, 10, kernel_size=5)
        self.conv2 = nn.Conv2d(10, 20, kernel_size=5)
        self.conv2_drop = nn.Dropout2d()
        self.fc1 = nn.Linear(320, 50)
        self.fc2 = nn.Linear(50, 10)

    def forward(self, x):
        x = F.relu(F.max_pool2d(self.conv1(x), 2))
        x = F.relu(F.max_pool2d(self.conv2_drop(self.conv2(x)), 2))
        x = x.view(-1, 320)
        x = F.relu(self.fc1(x))
        x = F.dropout(x, training=self.training)
        x = self.fc2(x)
        return F.log_softmax(x, dim=1)


input2=[[[-0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923], [-0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923], [-0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923], [-0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923], [-0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923], [-0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, 0.22492696344852448, 2.783302068710327, 1.2304575443267822, 0.22492696344852448, -0.4242129623889923, -0.4242129623889923, -0.029637714847922325, -0.2969306409358978, 0.09764464199542999, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923], [-0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, 0.22492696344852448, 2.757845640182495, 2.757845640182495, 2.757845640182495, 0.8867951035499573, 0.8740668296813965, 2.0068798065185547, 1.2304575443267822, 2.4014549255371094, 0.8740668296813965, 0.08491640537977219, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923], [-0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, 0.22492696344852448, 2.757845640182495, 2.757845640182495, 2.757845640182495, 2.783302068710327, 2.757845640182495, 2.757845640182495, 2.757845640182495, 2.783302068710327, 2.757845640182495, 0.8486104011535645, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923], [-0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, 0.22492696344852448, 2.757845640182495, 2.757845640182495, 2.757845640182495, 2.783302068710327, 2.757845640182495, 2.757845640182495, 2.757845640182495, 2.783302068710327, 2.757845640182495, 0.8486104011535645, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923], [-0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, 0.09764464199542999, 2.14689040184021, 2.14689040184021, 2.14689040184021, 2.2996292114257812, 2.783302068710327, 2.783302068710327, 2.783302068710327, 2.808758497238159, 2.783302068710327, 0.8486104011535645, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.2842023968696594, -0.029637714847922325, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923], [-0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.029637714847922325, 1.4722939729690552, 1.4722939729690552, 2.5160090923309326, 2.783302068710327, 2.757845640182495, 0.8486104011535645, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.029637714847922325, 1.2304575443267822, 0.08491640537977219, -0.4242129623889923, -0.4242129623889923], [-0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, 2.14689040184021, 2.783302068710327, 2.757845640182495, 0.8486104011535645, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.029637714847922325, 1.2304575443267822, 0.08491640537977219, -0.4242129623889923, -0.4242129623889923], [-0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, 0.6195022463798523, 2.14689040184021, 2.643291473388672, 2.783302068710327, 2.757845640182495, 0.8486104011535645, -0.4242129623889923, -0.4242129623889923, 0.6195022463798523, 2.14689040184021, 0.08491640537977219, 0.22492696344852448, 1.4722939729690552, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923], [-0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, 0.8740668296813965, 2.783302068710327, 2.783302068710327, 2.159618616104126, -0.4242129623889923, -0.029637714847922325, 0.22492696344852448, 0.7467845678329468, 2.783302068710327, 2.783302068710327, 2.783302068710327, 2.68147611618042, 1.1159032583236694, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923], [-0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, 0.8740668296813965, 2.757845640182495, 2.757845640182495, 2.4014549255371094, 0.8740668296813965, 2.0068798065185547, 2.757845640182495, 2.783302068710327, 2.757845640182495, 2.757845640182495, 2.757845640182495, 1.1159032583236694, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923], [-0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, 0.08491640537977219, 1.9941515922546387, 2.757845640182495, 2.783302068710327, 2.757845640182495, 2.757845640182495, 2.757845640182495, 2.783302068710327, 2.757845640182495, 1.5995763540267944, 0.8486104011535645, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923], [-0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, 0.6195022463798523, 2.5160090923309326, 2.757845640182495, 2.783302068710327, 2.757845640182495, 2.757845640182495, 2.757845640182495, 2.783302068710327, 1.7268586158752441, -0.16964827477931976, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923], [-0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, 0.09764464199542999, 0.7467845678329468, 2.783302068710327, 2.783302068710327, 2.783302068710327, 2.808758497238159, 2.783302068710327, 2.783302068710327, 0.19947050511837006, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923], [-0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, 0.09764464199542999, 0.8740668296813965, 2.3887267112731934, 2.783302068710327, 2.757845640182495, 2.757845640182495, 2.757845640182495, 2.783302068710327, 2.757845640182495, 1.981423258781433, -0.05509417876601219, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923], [-0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.029637714847922325, 2.0068798065185547, 2.757845640182495, 2.757845640182495, 2.783302068710327, 2.757845640182495, 2.757845640182495, 2.757845640182495, 2.783302068710327, 1.981423258781433, 0.08491640537977219, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923], [-0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, 0.22492696344852448, 2.757845640182495, 2.757845640182495, 2.757845640182495, 2.783302068710327, 2.757845640182495, 2.757845640182495, 2.757845640182495, 2.274172782897949, -0.05509417876601219, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923], [-0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, 0.22492696344852448, 2.783302068710327, 2.783302068710327, 2.783302068710327, 2.821486711502075, 2.783302068710327, 2.783302068710327, 0.19947050511837006, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923], [-0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, 0.22492696344852448, 2.757845640182495, 2.757845640182495, 2.757845640182495, 2.5287373065948486, 1.4722939729690552, 1.4722939729690552, -0.05509417876601219, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923], [-0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, 0.22492696344852448, 2.757845640182495, 2.757845640182495, 2.757845640182495, 0.5940457582473755, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923], [-0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, 0.22492696344852448, 2.757845640182495, 2.757845640182495, 2.757845640182495, 1.6504892110824585, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923], [-0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923], [-0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923], [-0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923, -0.4242129623889923]]]




nn=Net()
nn_state_dict = torch.load("tmp/model 004.txt")
nn.load_state_dict(nn_state_dict) 

torchsummary.summary(nn,input_size=(1,28,28))

offset=0
with open("nn_ram.coe", mode='w') as f:

    f.write("memory_initialization_radix=16;\nmemory_initialization_vector=")
    
    '''源数据：784   offset:0

    分配：10个卷积核，10*(1*5*5)=250    offset:784
    得到10*24*24=5760    offset:1034
    max pooling out:10*12*12=1440    offset:6794
    7450
    
    20个卷积核，20*(10*5*5)=5000     offset:8234
    得到20*8*8=1280    offset:13234
    max pooling out:20*4*4=320    offset:14514
    6600
    
    (reshape:320)    
    320*50+50+50=16100    
    offset:14834
    bias(50) offset:30834
    output(50) offset:30884
    
    50*10+10+10=520    
    offset:30934
    bias(10) offset:31434
    output(10) offset:31444
    16620
    
    7450+6600+16620=30670  
    784+30670=31454'''
    for i in range(28):
        for j in range(28):
            offset+=1
            f.write(float_to_hex(input2[0][i][j])+" ")
    tensor=nn.conv1.weight.detach().numpy()
    for i in range(10):
        for j in range(5):
            for k in range(5):
                f.write(float_to_hex(tensor[i][0][j][k])+" ")
                offset+=1
                
    print(offset,"(1034)")       
    for i in range(7200):
            f.write("0 ")
            offset+=1
            
    print(offset,"(8234)")
    #================================
    tensor=nn.conv2.weight.detach().numpy()
    for i in range(20):
        for c in range(10):
            for j in range(5):
                for k in range(5):
                    f.write(float_to_hex(tensor[i][c][j][k])+" ")
                    offset+=1
    
    for i in range(1600):
            f.write("0 ")
            offset+=1
            
    print(offset,"(14834)")  
    #================================
    tensor=nn.fc1.weight.detach().numpy()
    for i in range(50):
            for j in range(320):
                    f.write(float_to_hex(tensor[i][j])+" ")
                    offset+=1
                    
    tensor=nn.fc1.bias.detach().numpy()
    for i in range(50):
        f.write(float_to_hex(tensor[i])+" ")
        offset+=1
    for i in range(50):
        f.write("0 ")
        offset+=1
    print(offset,"(30394)")
    #================================
    tensor=nn.fc2.weight.detach().numpy()
    for i in range(10):
            for j in range(50):
                    f.write(float_to_hex(tensor[i][j])+" ")
                    offset+=1
                    
    tensor=nn.fc2.bias.detach().numpy()
    for i in range(10):
        f.write(float_to_hex(tensor[i])+" ")
        offset+=1
    for i in range(10):
        f.write("0 ")
        offset+=1
    print(offset,"(31454)")
        
        
    f.write(";")































 